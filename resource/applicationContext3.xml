<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 不带有切点的切面 -->
    <!-- 定义目标对象 -->
    <bean id="userDao" class="com.jaja.aopasp.daoimpl.UserDaoImpl"/>


    <bean id="myBefore" class="com.jaja.aopasp.function.MyBeforeAdvice"/>
    <!-- Spring支持配置生成代理: -->
    <bean id="customerDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!-- 设置目标对象 -->
        <property name="target" ref="userDao"/>
        <!-- 设置实现的接口 ,value中写接口的全路径 -->
        <property name="proxyInterfaces" value="com.jaja.aopasp.dao.UserDao"/>
        <!-- 在目标上应用增强 -->
        <property name="interceptorNames" value="myBefore"/>
    </bean>










    <!-- 带有切点的切面 -->
    <!-- 定义目标对象 -->
    <bean id="orderDao" class="com.jaja.aopasp.dao.OrderDao"/>
    <!-- 定义增强 -->
    <bean id="myAroundAdvice" class="com.jaja.aopasp.function.MyAroundAdvice"/>
    <!-- 定义切点切面: -->
    <bean id="myPointcutAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <!-- 定义表达式,规定哪些方法执行拦截 -->
        <property name="patterns" value=".*add.*,.*find.*"/>
        <!-- 应用增强 -->
        <property name="advice" ref="myAroundAdvice"/>
    </bean>

    <!-- 定义生成代理对象 -->
    <bean id="orderProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!-- 配置目标 -->
        <property name="target" ref="orderDao"/>
        <!-- 针对类的代理 -->
        <property name="proxyTargetClass" value="true"/>
        <!-- 在目标上应用增强 -->
        <property name="interceptorNames" value="myPointcutAdvisor"/>

    </bean>

</beans>